# Generated by Django 3.1.1 on 2021-03-23 13:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import openstack.models
import openstack.validators
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("userdb", "0020_region_disable_new_instances"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("openstack", "0013_actionlog_user"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="hypervisorstats", options={"verbose_name_plural": "Hypervisor Stats"},
        ),
        migrations.AlterModelOptions(
            name="regionsettings", options={"verbose_name_plural": "Region Settings"},
        ),
        migrations.RemoveField(model_name="regionsettings", name="gvl_image_id",),
        migrations.AddField(
            model_name="regionsettings",
            name="horizon_endpoint",
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name="regionsettings",
            name="max_volume_size_gb",
            field=models.IntegerField(
                default=5000, verbose_name="Maximum allowed volume size in GB"
            ),
        ),
        migrations.AlterField(
            model_name="tenant",
            name="auth_password",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name="tenant",
            name="created_network_id",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name="tenant",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tenants",
                to="userdb.team",
            ),
        ),
        migrations.CreateModel(
            name="ServerLease",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("server_id", models.UUIDField(editable=False, unique=True)),
                ("server_name", models.CharField(editable=False, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_renewed_at", models.DateTimeField(auto_now=True)),
                (
                    "expiry",
                    models.DateTimeField(
                        blank=True,
                        default=openstack.models.get_default_server_lease_expiry,
                        null=True,
                    ),
                ),
                (
                    "renewal_count",
                    models.PositiveIntegerField(default=0, editable=False),
                ),
                ("shelved", models.BooleanField(default=False)),
                ("deleted", models.BooleanField(default=False)),
                (
                    "last_reminder_sent_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                (
                    "assigned_teammember",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="server_leases",
                        to="userdb.teammember",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="server_leases",
                        to="openstack.tenant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="KeyPair",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Keypair name"
                    ),
                ),
                (
                    "public_key",
                    models.TextField(
                        validators=[openstack.validators.validate_public_key],
                        verbose_name="SSH public key",
                    ),
                ),
                ("fingerprint", models.CharField(editable=False, max_length=47)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="keypairs",
                        related_query_name="keypair",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"unique_together": {("user", "public_key")}},
        ),
    ]
